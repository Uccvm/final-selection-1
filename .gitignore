local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Project Slayers Nate Hub", "BloodTheme") -- CREATES THE WINDOW


-- { " Autofarms " }
local Autofarms = Window:NewTab("Autofarms")
local AutofarmsSection = Autofarms:NewSection("Autofarms")


AutofarmsSection:NewButton("Hand-Demon", "Autofarms", function()
    while( true )
    do
    local Mob = workspace.Mobs["Final_Selection"]["Hand Demon"] -- pretend this is a path to a real mob model, with a humanoid and body
    local Body = workspace.Mobs["Final_Selection"]["Hand Demon"].PrimaryPart -- this will get the primary part of the model, more info here: https://developer.roblox.com/en-us/api-reference/property/Model/PrimaryPart
    local BodyCFrame = Body.CFrame -- the CFrame of the mob's body
    
    -- here is the teleport, we change the player's humanoidrootpart CFrame to our desired CFrame (avoid using position as it messes with your character's welds)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame - BodyCFrame.LookVector * 3
    
    -- this will teleport you 3 studs behind the mob on the Z axis (the Z axis may not always be the one the mob is facing forwards with, mess around with this a bit to find out which axis is correct)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame:ToWorldSpace(CFrame.new(0, 0, 8))
    if game.Workspace.Mobs["Final_Selection"]["Hand Demon"].Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end -- IF THE MOB IS DEAD THEN JUST DESTROY IT FOR FASTER FARMING
    task.wait(0.07)
    end
end)

AutofarmsSection:NewButton("Zanegutsu", "Autofarms", function()
    while( true )
    do
    local Mob = workspace.Mobs.Bosses.ThunderTrainee.Zanegutsu["Zanegutsu Kuuchie"] -- pretend this is a path to a real mob model, with a humanoid and body
    local Body = workspace.Mobs.Bosses.ThunderTrainee.Zanegutsu["Zanegutsu Kuuchie"].PrimaryPart -- this will get the primary part of the model, more info here: https://developer.roblox.com/en-us/api-reference/property/Model/PrimaryPart
    local BodyCFrame = Body.CFrame -- the CFrame of the mob's body
    
    -- here is the teleport, we change the player's humanoidrootpart CFrame to our desired CFrame (avoid using position as it messes with your character's welds)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame - BodyCFrame.LookVector * 3
    
    -- this will teleport you 3 studs behind the mob on the Z axis (the Z axis may not always be the one the mob is facing forwards with, mess around with this a bit to find out which axis is correct)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame:ToWorldSpace(CFrame.new(0, 0, 8))
    if game.Workspace.Mobs.Bosses.ThunderTrainee.Zanegutsu["Zanegutsu Kuuchie"].Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end -- IF THE MOB IS DEAD THEN JUST DESTROY IT FOR FASTER FARMING
    task.wait(0.07)
    end
end)



AutofarmsSection:NewButton("Giyu", "Autofarms", function()
    while( true )
    do
    local Mob = workspace.Mobs.Bosses.Water.Giyu -- pretend this is a path to a real mob model, with a humanoid and body
    local Body = workspace.Mobs.Bosses.Water.Giyu.PrimaryPart -- this will get the primary part of the model, more info here: https://developer.roblox.com/en-us/api-reference/property/Model/PrimaryPart
    local BodyCFrame = Body.CFrame -- the CFrame of the mob's body
    
    -- here is the teleport, we change the player's humanoidrootpart CFrame to our desired CFrame (avoid using position as it messes with your character's welds)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame - BodyCFrame.LookVector * 3
    
    -- this will teleport you 3 studs behind the mob on the Z axis (the Z axis may not always be the one the mob is facing forwards with, mess around with this a bit to find out which axis is correct)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame:ToWorldSpace(CFrame.new(0, 0, 8))
    if game.Workspace.Mobs.Bosses.Water.Giyu.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end -- IF THE MOB IS DEAD THEN JUST DESTROY IT FOR FASTER FARMING
    task.wait(0.07)
    end
end)


AutofarmsSection:NewButton("Sabito", "Autofarms", function()
    while( true )
    do
    local Mob = workspace.Mobs.Bosses.Water_Trainee.Sabito.Sabito -- pretend this is a path to a real mob model, with a humanoid and body
    local Body = workspace.Mobs.Bosses.Water_Trainee.Sabito.Sabito.PrimaryPart -- this will get the primary part of the model, more info here: https://developer.roblox.com/en-us/api-reference/property/Model/PrimaryPart
    local BodyCFrame = Body.CFrame -- the CFrame of the mob's body
    
    -- here is the teleport, we change the player's humanoidrootpart CFrame to our desired CFrame (avoid using position as it messes with your character's welds)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame - BodyCFrame.LookVector * 3
    
    -- this will teleport you 3 studs behind the mob on the Z axis (the Z axis may not always be the one the mob is facing forwards with, mess around with this a bit to find out which axis is correct)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame:ToWorldSpace(CFrame.new(0, 0, 8))
    if game.Workspace.Mobs.Bosses.Water_Trainee.Sabito.Sabito.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end -- IF THE MOB IS DEAD THEN JUST DESTROY IT FOR FASTER FARMING
    task.wait(0.07)
    end
end)


AutofarmsSection:NewButton("Sanemi", "Autofarms", function()
    while( true )
    do
    local Mob = workspace.Mobs.Bosses.Wind_Trainee.Sanemi.Sanemi -- pretend this is a path to a real mob model, with a humanoid and body
    local Body = workspace.Mobs.Bosses.Wind_Trainee.Sanemi.Sanemi.PrimaryPart -- this will get the primary part of the model, more info here: https://developer.roblox.com/en-us/api-reference/property/Model/PrimaryPart
    local BodyCFrame = Body.CFrame -- the CFrame of the mob's body
    
    -- here is the teleport, we change the player's humanoidrootpart CFrame to our desired CFrame (avoid using position as it messes with your character's welds)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame - BodyCFrame.LookVector * 3
    
    -- this will teleport you 3 studs behind the mob on the Z axis (the Z axis may not always be the one the mob is facing forwards with, mess around with this a bit to find out which axis is correct)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame:ToWorldSpace(CFrame.new(0, 0, 8))
    if game.Workspace.Mobs.Bosses.Wind_Trainee.Sanemi.Sanemi.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end -- IF THE MOB IS DEAD THEN JUST DESTROY IT FOR FASTER FARMING
    task.wait(0.07)
    end
end)


AutofarmsSection:NewButton("Shiron", "Autofarms", function()
    while( true )
    do
    local Mob = workspace.Mobs.Bosses.Insect_Trainee.Ouwbae.Shiron -- pretend this is a path to a real mob model, with a humanoid and body
    local Body = workspace.Mobs.Bosses.Insect_Trainee.Ouwbae.Shiron.PrimaryPart -- this will get the primary part of the model, more info here: https://developer.roblox.com/en-us/api-reference/property/Model/PrimaryPart
    local BodyCFrame = Body.CFrame -- the CFrame of the mob's body
    
    -- here is the teleport, we change the player's humanoidrootpart CFrame to our desired CFrame (avoid using position as it messes with your character's welds)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame - BodyCFrame.LookVector * 3
    
    -- this will teleport you 3 studs behind the mob on the Z axis (the Z axis may not always be the one the mob is facing forwards with, mess around with this a bit to find out which axis is correct)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame:ToWorldSpace(CFrame.new(0, 0, 8))
    if game.Workspace.Mobs.Bosses.Insect_Trainee.Ouwbae.Shiron.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end -- IF THE MOB IS DEAD THEN JUST DESTROY IT FOR FASTER FARMING
    task.wait(0.07)
    end
end)


AutofarmsSection:NewButton("Nezuko", "Autofarms", function()
    while( true )
    do
    local Mob = workspace.Mobs.Bosses.Bomb_boss.Nezuko -- pretend this is a path to a real mob model, with a humanoid and body
    local Body = workspace.Mobs.Bosses.Bomb_boss.Nezuko.PrimaryPart -- this will get the primary part of the model, more info here: https://developer.roblox.com/en-us/api-reference/property/Model/PrimaryPart
    local BodyCFrame = Body.CFrame -- the CFrame of the mob's body
    
    -- here is the teleport, we change the player's humanoidrootpart CFrame to our desired CFrame (avoid using position as it messes with your character's welds)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame - BodyCFrame.LookVector * 3
    
    -- this will teleport you 3 studs behind the mob on the Z axis (the Z axis may not always be the one the mob is facing forwards with, mess around with this a bit to find out which axis is correct)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = BodyCFrame:ToWorldSpace(CFrame.new(0, 0, 8))
    if game.Workspace.Mobs.Bosses.Bomb_boss.Nezuko.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end -- IF THE MOB IS DEAD THEN JUST DESTROY IT FOR FASTER FARMING
    task.wait(0.07)
    end
end)




-- { " Teleports " }
local Teleports = Window:NewTab("Teleports")
local TeleportsSection = Teleports:NewSection("Teleports")

TeleportsSection:NewButton("Butterfly Mansion", "Teleports to Butterfly Mansion", function()
    local teleport_table = {
        location1 = Vector3.new(2995.91, 316, -3872.27), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(20,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

TeleportsSection:NewButton("Kiribating Village", "Teleports to Kiribating Village", function()
    local teleport_table = {
        location1 = Vector3.new(122.69026184082031, 282.2076416015625, -1634.080322265625), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(20,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

TeleportsSection:NewButton("Ushumaru Village", "Teleports to Ushumaru Village", function()
    local teleport_table = {
        location1 = Vector3.new(-500.5457458496094, 276.33111572265625, -3308.316650390625), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(20,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

TeleportsSection:NewButton("Zapiwara Mountain", "Teleports to Zapiwara Mountain", function()
    local teleport_table = {
        location1 = Vector3.new(-342.5775451660156, 426.8577880859375, -2390.2724609375), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(20,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

TeleportsSection:NewButton("Final Selection", "Teleports to Final Selection", function()
    local teleport_table = {
        location1 = Vector3.new(5167.53173828125, 365.8748779296875, -2425.324462890625), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(20,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

TeleportsSection:NewButton("Slasher Demon", "Teleports to Slasher Demon", function()
    local teleport_table = {
        location1 = Vector3.new(4353.17236328125, 342.91424560546875, -4216.78076171875), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(20,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)


TeleportsSection:NewButton("Dungeon", "Teleports to the Dungeon", function()
    local teleport_table = {
        location1 = Vector3.new(-1117.274658203125, 283.2576904296875, -1621.413330078125), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(15,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)




TeleportsSection:NewButton("Muzan", "Teleports to Muzan", function()
    local cf = CFrame.new(game:GetService("Workspace").Muzan.SpawnPos.Value)
    local tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(10), {CFrame = cf})                    
    tween:Play()
end)




-- { " Bosses " }
local Bosses = Window:NewTab("Bosses")
local BossesSection = Bosses:NewSection("Bosses")

BossesSection:NewButton("Giyu", "Teleports to Giyu", function()

    local teleport_table = {
        location1 = Vector3.new(3008.982666015625, 316.9587097167969, -3138.85546875), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(15,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

BossesSection:NewButton("Shiron", "Teleports to Shiron", function()

    local teleport_table = {
        location1 = Vector3.new(3201.138671875, 370.8841552734375, -3829.810546875), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(15,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

BossesSection:NewButton("Kaden", "Teleports to Kaden", function()

    local teleport_table = {
        location1 = Vector3.new(-482.033935546875, 304.46697998046875, -2913.48291015625), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(15,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

BossesSection:NewButton("Sabito", "Teleports to Sabito", function()

    local teleport_table = {
        location1 = Vector3.new(1171.4698486328125, 286.0910949707031, -2847.0576171875), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(15,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

BossesSection:NewButton("Nezuko", "Teleports to Nezuko", function()

    local teleport_table = {
        location1 = Vector3.new(3570.39892578125, 342.2144775390625, -4496.0234375), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(15,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

-- { " Breathing " }
local Breathing = Window:NewTab("Breathing")
local BreathingSection = Breathing:NewSection("Breathing")

BreathingSection:NewButton("Thunder", "Teleports to Thunder Breathing Trainer", function()

    local teleport_table = {
        location1 = Vector3.new(-330.3265075683594, 426.8577880859375, -2383.52099609375), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(15,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

BreathingSection:NewButton("Water", "Teleports to Water Breathing Trainer", function()

    local teleport_table = {
        location1 = Vector3.new(700.4691162109375, 261.42681884765625, -2401.95458984375), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(15,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

BreathingSection:NewButton("Insect", "Teleports to Insect Breathing Trainer", function()

    local teleport_table = {
        location1 = Vector3.new(2882.50341796875, 316.0005187988281, -3911.5517578125), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(15,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)

BreathingSection:NewButton("Wind", "Teleports to Wind Breathing Trainer", function()

    local teleport_table = {
        location1 = Vector3.new(1785.8377685546875, 333.9491271972656, -3512.076904296875), -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(15,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            -- print('ez1')
        end
    end
    
    bypass_teleport(teleport_table.location1)
end)
-- { " Kill Aura " }

local KillAura = Window:NewTab("KillAura")
local KillAuraSection = KillAura:NewSection("KillAura")

KillAuraSection:NewButton("Nezuko", "KillAura", function()
    while( true )
do
   local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))

while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))
if game.Workspace.Mobs.Bosses.Bomb_boss.Nezuko.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end -- IF THE MOB IS DEAD THEN JUST DESTROY IT FOR FASTER FARMING
task.wait(2.7)
end
end
end
end
end)


KillAuraSection:NewButton("Zanegutsu", "KillAura", function()
    while( true )
do
   local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))
        if game.Workspace.Mobs.Bosses.ThunderTrainee.Zanegutsu["Zanegutsu Kuuchie"].Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end
task.wait(2.7)
end
end
end
end
end)

KillAuraSection:NewButton("Giyu", "KillAura", function()
    while( true )
do
   local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))
        if game.Workspace.Mobs.Bosses.Water.Giyu.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end
task.wait(2.7)
end
end
end
end
end)

KillAuraSection:NewButton("Sabito", "KillAura", function()
    while( true )
do
   local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))
        if game.Workspace.Mobs.Bosses.Water_Trainee.Sabito.Sabito.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end
task.wait(2.7)
end
end
end
end
end)

KillAuraSection:NewButton("Sanemi", "KillAura", function()
    while( true )
do
   local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))
        if game.Workspace.Mobs.Bosses.Wind_Trainee.Sanemi.Sanemi.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end
task.wait(2.7)
end
end
end
end
end)

KillAuraSection:NewButton("Shiron", "KillAura", function()
    while( true )
do
   local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))


while( true )
do
    local player = game:GetService("Players").LocalPlayer
    local args = {
            [1] = "fist_combat",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game.Players.LocalPlayer,
            [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
            [5] = game.Players.LocalPlayer.Character.Humanoid,
            [6] = 919,
        }
        
        game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))
        if game.Workspace.Mobs.Bosses.Insect_Trainee.Ouwbae.Shiron.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end
task.wait(2.7)
end
end
end
end
end)

-- { " Extra " }
local Extra = Window:NewTab("Extra")
local ExtraSection = Extra:NewSection("Extra")

ExtraSection:NewButton("Esp", "Makes you see players", function()
    loadstring(game:HttpGet('https://pastebin.com/raw/kvr0AuWz'))()
end)

ExtraSection:NewButton("SoftAim", "Aim locks onto players.", function()
--// Preventing Multiple Processes

pcall(function()
    getgenv().Aimbot.Functions:Exit()
end)

--// Environment

getgenv().Aimbot = {}
local Environment = getgenv().Aimbot

--// Services

local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local Camera = game:GetService("Workspace").CurrentCamera

--// Variables

local LocalPlayer = Players.LocalPlayer
local Title = "Exunys Developer"
local FileNames = {"Aimbot", "Configuration.json", "Drawing.json"}
local RequiredDistance = math.huge
local Typing = false
local Running = false
local Animation = nil
local ServiceConnections = {RenderSteppedConnection = nil, InputBeganConnection = nil, InputEndedConnection = nil, TypingStartedConnection = nil, TypingEndedConnection = nil}

--// Script Settings

Environment.Settings = {
    SendNotifications = true,
    SaveSettings = true, -- Re-execute upon changing
    ReloadOnTeleport = true,
    Enabled = true,
    TeamCheck = false,
    AliveCheck = true,
    WallCheck = false, -- Laggy
    Sensitivity = 0, -- Animation length (in seconds) before fully locking onto target
    TriggerKey = "MouseButton2",
    Toggle = false,
    LockPart = "Head" -- Body part to lock on
}

Environment.FOVSettings = {
    Enabled = true,
    Visible = true,
    Amount = 90,
    Color = "255, 255, 255",
    LockedColor = "255, 70, 70",
    Transparency = 0.5,
    Sides = 60,
    Thickness = 1,
    Filled = false
}

Environment.FOVCircle = Drawing.new("Circle")
Environment.Locked = nil

--// Core Functions

local function Encode(Table)
    if Table and type(Table) == "table" then
        local EncodedTable = HttpService:JSONEncode(Table)

        return EncodedTable
    end
end

local function Decode(String)
    if String and type(String) == "string" then
        local DecodedTable = HttpService:JSONDecode(String)

        return DecodedTable
    end
end

local function GetColor(Color)
    local R = tonumber(string.match(Color, "([%d]+)[%s]*,[%s]*[%d]+[%s]*,[%s]*[%d]+"))
    local G = tonumber(string.match(Color, "[%d]+[%s]*,[%s]*([%d]+)[%s]*,[%s]*[%d]+"))
    local B = tonumber(string.match(Color, "[%d]+[%s]*,[%s]*[%d]+[%s]*,[%s]*([%d]+)"))

    return Color3.fromRGB(R, G, B)
end

local function SendNotification(TitleArg, DescriptionArg, DurationArg)
    if Environment.Settings.SendNotifications then
        StarterGui:SetCore("SendNotification", {
            Title = TitleArg,
            Text = DescriptionArg,
            Duration = DurationArg
        })
    end
end

--// Functions

local function SaveSettings()
    if Environment.Settings.SaveSettings then
        if isfile(Title.."/"..FileNames[1].."/"..FileNames[2]) then
            writefile(Title.."/"..FileNames[1].."/"..FileNames[2], Encode(Environment.Settings))
        end

        if isfile(Title.."/"..FileNames[1].."/"..FileNames[3]) then
            writefile(Title.."/"..FileNames[1].."/"..FileNames[3], Encode(Environment.FOVSettings))
        end
    end
end

local function GetClosestPlayer()
    if Environment.Locked == nil then
        if Environment.FOVSettings.Enabled then
            RequiredDistance = Environment.FOVSettings.Amount
        else
            RequiredDistance = math.huge
        end

        for _, v in next, Players:GetPlayers() do
            if v ~= LocalPlayer then
                if v.Character and v.Character[Environment.Settings.LockPart] then
                    if Environment.Settings.TeamCheck and v.Team == LocalPlayer.Team then continue end
                    if Environment.Settings.AliveCheck and v.Character.Humanoid.Health <= 0 then continue end
                    if Environment.Settings.WallCheck and #(Camera:GetPartsObscuringTarget({v.Character[Environment.Settings.LockPart].Position}, v.Character:GetDescendants())) > 0 then continue end

                    local Vector, OnScreen = Camera:WorldToViewportPoint(v.Character[Environment.Settings.LockPart].Position)
                    local Distance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(Vector.X, Vector.Y)).Magnitude

                    if Distance < RequiredDistance and OnScreen then
                        RequiredDistance = Distance
                        Environment.Locked = v
                    end
                end
            end
        end
    elseif (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(Camera:WorldToViewportPoint(Environment.Locked.Character[Environment.Settings.LockPart].Position).X, Camera:WorldToViewportPoint(Environment.Locked.Character[Environment.Settings.LockPart].Position).Y)).Magnitude > RequiredDistance then
        Environment.Locked = nil
        Animation:Cancel()
        Environment.FOVCircle.Color = GetColor(Environment.FOVSettings.Color)
    end
end

--// Typing Check

ServiceConnections.TypingStartedConnection = UserInputService.TextBoxFocused:Connect(function()
    Typing = true
end)

ServiceConnections.TypingEndedConnection = UserInputService.TextBoxFocusReleased:Connect(function()
    Typing = false
end)

--// Create, Save & Load Settings

if Environment.Settings.SaveSettings then
    if not isfolder(Title) then
        makefolder(Title)
    end

    if not isfolder(Title.."/"..FileNames[1]) then
        makefolder(Title.."/"..FileNames[1])
    end

    if not isfile(Title.."/"..FileNames[1].."/"..FileNames[2]) then
        writefile(Title.."/"..FileNames[1].."/"..FileNames[2], Encode(Environment.Settings))
    else
        Environment.Settings = Decode(readfile(Title.."/"..FileNames[1].."/"..FileNames[2]))
    end

    if not isfile(Title.."/"..FileNames[1].."/"..FileNames[3]) then
        writefile(Title.."/"..FileNames[1].."/"..FileNames[3], Encode(Environment.FOVSettings))
    else
        Environment.Visuals = Decode(readfile(Title.."/"..FileNames[1].."/"..FileNames[3]))
    end

    coroutine.wrap(function()
        while wait(10) do
            SaveSettings()
        end
    end)()
else
    if isfolder(Title) then
        delfolder(Title)
    end
end

local function Load()
    ServiceConnections.RenderSteppedConnection = RunService.RenderStepped:Connect(function()
        if Environment.FOVSettings.Enabled and Environment.Settings.Enabled then
            Environment.FOVCircle.Radius = Environment.FOVSettings.Amount
            Environment.FOVCircle.Thickness = Environment.FOVSettings.Thickness
            Environment.FOVCircle.Filled = Environment.FOVSettings.Filled
            Environment.FOVCircle.NumSides = Environment.FOVSettings.Sides
            Environment.FOVCircle.Color = GetColor(Environment.FOVSettings.Color)
            Environment.FOVCircle.Transparency = Environment.FOVSettings.Transparency
            Environment.FOVCircle.Visible = Environment.FOVSettings.Visible
            Environment.FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
        else
            Environment.FOVCircle.Visible = false
        end

        if Running and Environment.Settings.Enabled then
            GetClosestPlayer()

            if Environment.Settings.Sensitivity > 0 then
                Animation = TweenService:Create(Camera, TweenInfo.new(Environment.Settings.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, Environment.Locked.Character[Environment.Settings.LockPart].Position)})
                Animation:Play()
            else
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, Environment.Locked.Character[Environment.Settings.LockPart].Position)
            end

            Environment.FOVCircle.Color = GetColor(Environment.FOVSettings.LockedColor)
        end
    end)

    ServiceConnections.InputBeganConnection = UserInputService.InputBegan:Connect(function(Input)
        if not Typing then
            pcall(function()
                if Input.KeyCode == Enum.KeyCode[Environment.Settings.TriggerKey] then
                    if Environment.Settings.Toggle then
                        Running = not Running

                        if not Running then
                            Environment.Locked = nil
                            Animation:Cancel()
                            Environment.FOVCircle.Color = GetColor(Environment.FOVSettings.Color)
                        end
                    else
                        Running = true
                    end
                end
            end)

            pcall(function()
                if Input.UserInputType == Enum.UserInputType[Environment.Settings.TriggerKey] then
                    if Environment.Settings.Toggle then
                        Running = not Running

                        if not Running then
                            Environment.Locked = nil
                            Animation:Cancel()
                            Environment.FOVCircle.Color = GetColor(Environment.FOVSettings.Color)
                        end
                    else
                        Running = true
                    end
                end
            end)
        end
    end)

    ServiceConnections.InputEndedConnection = UserInputService.InputEnded:Connect(function(Input)
        if not Typing then
            pcall(function()
                if Input.KeyCode == Enum.KeyCode[Environment.Settings.TriggerKey] then
                    if not Environment.Settings.Toggle then
                        Running = false
                        Environment.Locked = nil
                        Animation:Cancel()
                        Environment.FOVCircle.Color = GetColor(Environment.FOVSettings.Color)
                    end
                end
            end)

            pcall(function()
                if Input.UserInputType == Enum.UserInputType[Environment.Settings.TriggerKey] then
                    if not Environment.Settings.Toggle then
                        Running = false
                        Environment.Locked = nil
                        Animation:Cancel()
                        Environment.FOVCircle.Color = GetColor(Environment.FOVSettings.Color)
                    end
                end
            end)
        end
    end)
end

--// Functions

Environment.Functions = {}

function Environment.Functions:Exit()
    SaveSettings()

    for _, v in next, ServiceConnections do
        v:Disconnect()
    end

    Environment.FOVCircle:Remove()

    getgenv().Aimbot.Functions = nil
    getgenv().Aimbot = nil
end

function Environment.Functions:Restart()
    SaveSettings()

    for _, v in next, ServiceConnections do
        v:Disconnect()
    end

    Environment.FOVCircle:Remove()

    Load()
end

function Environment.Functions:ResetSettings()
    Environment.Settings = {
        SendNotifications = true,
        SaveSettings = true, -- Re-execute upon changing
        ReloadOnTeleport = true,
        Enabled = true,
        TeamCheck = false,
        AliveCheck = true,
        WallCheck = false,
        Sensitivity = 0, -- Animation length (in seconds) before fully locking onto target
        TriggerKey = "MouseButton2",
        Toggle = false,
        LockPart = "Head" -- Body part to lock on
    }

    Environment.FOVSettings = {
        Enabled = true,
        Visible = true,
        Amount = 90,
        Color = "255, 255, 255",
        LockedColor = "255, 70, 70",
        Transparency = 0.5,
        Sides = 60,
        Thickness = 1,
        Filled = false
    }

    SaveSettings()

    for _, v in next, ServiceConnections do
        v:Disconnect()
    end

    Load()
end

--// Support Check

if not Drawing or not writefile or not makefolder then
    SendNotification(Title, "Your exploit does not support this script", 3); return
end

--// Reload On Teleport

if Environment.Settings.ReloadOnTeleport then
    local queueonteleport = queue_on_teleport or syn.queue_on_teleport

    if queueonteleport then
        queueonteleport(game:HttpGet("https://raw.githubusercontent.com/Exunys/Aimbot-V2/main/Resources/Scripts/Main.lua"))
    else
        SendNotification(Title, "Your exploit does not support \"syn.queue_on_teleport()\"")
    end
end

--// Load

Load(); SendNotification(Title, "Aimbot script successfully loaded! Check the GitHub page on how to configure the script.", 5)
end)

ExtraSection:NewSlider("walkspeed", "Slider to change your Walkspeed", 500, 27, function(s) -- 500 (MaxValue) | 0 (MinValue)
    getgenv().WalkSpeedValue = s; --set your desired walkspeed here
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
  end)
  
  
  ExtraSection:NewSlider("JumpPower", "Slider to change your JumpPower", 500, 50, function(s) -- 500 (MaxValue) | 0 (MinValue)
    getgenv().JumpPowerValue = s; --set your desired walkspeed here
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'JumpPower':Connect(function()
    Player.Character.Humanoid.JumpPower = getgenv().JumpPowerValue;
    end)
    Player.Character.Humanoid.JumpPower = getgenv().JumpPowerValue;
  end)

ExtraSection:NewButton("Anti-Sun", "No Damage from sun", function()
    while( true )
do
    wait(0.1) game.ReplicatedStorage.Remotes.To_Server.Sun_Damage:Destroy() break; end
end)

ExtraSection:NewButton("Auto-pickup", "picks up items for you", function()
  while( true )
do
  local args = {
      [1] = "Health Elixir",
    }
    
    workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
    local args = {
      [1] = "Shinobu Haorie",
    }
    
    workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Lightning Katana",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Stamina Elixir",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Zenitsu Haorie",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Water Katana",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Stylish Mask",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Ore",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Health Regen Elixir",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Straw Hat",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Insect Katana",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Giyu Haorie",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Fox Mask",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
local args = {
  [1] = "Nezuko's Bamboo Pacifier",
}

workspace.Debree["Loot_Chest"]["Add_To_Inventory"]:InvokeServer(unpack(args))
    task.wait()
end
end)

ExtraSection:NewButton("No-Fog", "Removes Fog", function()
    game.Lighting.FogEnd = 100000
    game.Lighting.FogStart = 0
    game.Lighting.ClockTime = 14
    game.Lighting.Brightness = 2
    game.Lighting.GlobalShadows = false
    while( true )
do
    wait(0.1) game.Lighting.water_view_distance_thing:Destroy() break; end
    while( true )
do
    wait(0.1) game.Lighting.Atmosphere:Destroy() break; end
    while( true )
do
    wait(0.1) game.Lighting.Value:Destroy() break; end
    while( true )
do
    wait(0.1) game.Lighting.water_blur:Destroy() break; end
    while( true )
do
    wait(0.1) game.Lighting.water_ting:Destroy() break; end

end)

        ExtraSection:NewButton("No-Oxygen/Water", "Never have Oxygen/Water again", function()
    while( true )
        do
            local c = game.Players.LocalPlayer
            c.PlayerGui.Swimming.LocalScript:Destroy() end
end)

ExtraSection:NewButton("max-breathing/stam", "max-breathing/stam", function()
    while wait() do -- Made By: kazeismeme
        local stam = game:GetService("ReplicatedStorage").PlayerValues[game.Players.LocalPlayer.Name].Stamina
        local breathing = game:GetService("ReplicatedStorage").PlayerValues[game.Players.LocalPlayer.Name].Breath
        if not stam.Value == stam.MaxValue or  not breathing.Value == breathing.MaxValue then
        wait()
      else
          stam.Value=stam.MaxValue
          breathing.Value = breathing.MaxValue
        end end
end)

ExtraSection:NewToggle("Heal", "Heal", function(state)
    if state then
        local args = {
            [1] = true,
        }
        
        game:GetService("ReplicatedStorage").Remotes["heal_tang123asd"]:FireServer(unpack(args))
    else
        local args = {
            [1] = false,
        }
        
        game:GetService("ReplicatedStorage").Remotes["heal_tang123asd"]:FireServer(unpack(args))
    end
end)

ExtraSection:NewToggle("godspeed", "godspeed only for slayers", function(state)
    if state then
    local args = {[1] = true}
    game:GetService("ReplicatedStorage").Remotes.thundertang123:FireServer(unpack(args))
else
        local args = {[1] = false}
    game:GetService("ReplicatedStorage").Remotes.thundertang123:FireServer(unpack(args))
    end
    end)

    ExtraSection:NewButton("100-regen-elixerz", "buys 100 potions every time clicked.", function()
        local args = {
            [1] = 0,
            [2] = 0,
            [3] = 100,
        }
        
        game:GetService("ReplicatedStorage")["purchase_elixirs"]:FireServer(unpack(args))
    end)

    ExtraSection:NewButton("100-Stamina-elixerz", "buys 100 potions every time clicked.", function()
local args = {
    [1] = 0,
    [2] = 100,
    [3] = 0,
}

game:GetService("ReplicatedStorage")["purchase_elixirs"]:FireServer(unpack(args))
    end)

    ExtraSection:NewButton("100-Health-elixerz", "buys 100 potions every time clicked.", function()
local args = {
    [1] = 100,
    [2] = 0,
    [3] = 0,
}

game:GetService("ReplicatedStorage")["purchase_elixirs"]:FireServer(unpack(args))
            end)


            ExtraSection:NewButton("Flower-Esp", "you can now see all blue lily flowers on map", function()
                local Camera = workspace.CurrentCamera
                local Player = game:GetService("Players").LocalPlayer
                local RS = game:GetService("RunService")
                local ESP = {}
                function ESP:add(object, name, col)
                local namedrawing = Drawing.new("Text")
                namedrawing.Text = name
                namedrawing.Size = 16
                namedrawing.Color = col
                namedrawing.Center = true
                namedrawing.Visible = true
                namedrawing.Transparency = 1
                namedrawing.Position = Vector2.new(0, 0)
                namedrawing.Outline = true
                namedrawing.OutlineColor = Color3.fromRGB(10, 10, 10)
                namedrawing.Font = 3
                local function Update()
                local c
                c = RS.RenderStepped:Connect(function()
                if object.Parent ~= nil and object:FindFirstChild("Pick_Demon_Flower_Thing") then
                local p, vis = Camera:WorldToViewportPoint(object.Position)
                if vis then
                namedrawing.Position = Vector2.new(p.X, p.Y)
                namedrawing.Visible = true
                else
                namedrawing.Visible = false
                end
                else
                namedrawing.Visible = false
                if object.Parent == nil  or not object:FindFirstChild("Pick_Demon_Flower_Thing") then
                namedrawing:Remove()
                c:Disconnect()
                end
                end
                end)
                end
                coroutine.wrap(Update)()
                end
                RS.Heartbeat:Connect(function()
                for _,v in pairs(game:GetService("Workspace")["Demon_Flowers_Spawn"]:GetDescendants()) do
                if v:FindFirstChild('Pick_Demon_Flower_Thing') then
                ESP:add(v, "Lilly Flower", Color3.fromRGB(13, 105, 172))
                end
                end
                end)
            end)


       ExtraSection:NewButton("Auto-Mastery-Die-to-stop", "Farms fist mastery without getting attacked and die to stop", function()
        local teleport_table = {
            location1 = Vector3.new(153.06951904296875, 282.8826904296875, -1743.8984375), -- your desired position
        }
        
        local tween_s = game:GetService('TweenService')
        local tweeninfo = TweenInfo.new(20,Enum.EasingStyle.Linear)
        
        local lp = game.Players.LocalPlayer
        
        function bypass_teleport(v)
            if lp.Character and 
            lp.Character:FindFirstChild('HumanoidRootPart') then
                local cf = CFrame.new(v)
                local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
                a:Play()
                -- a.Completed:Wait()
                -- print('ez1')
            end
        end
        
        bypass_teleport(teleport_table.location1)
        while( true )
            do
               local player = game:GetService("Players").LocalPlayer
                local args = {
                        [1] = "fist_combat",
                        [2] = game:GetService("Players").LocalPlayer,
                        [3] = game.Players.LocalPlayer,
                        [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
                        [5] = game.Players.LocalPlayer.Character.Humanoid,
                        [6] = 1,
                    }
                    
                    game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))
                    if game.Players.LocalPlayer.Character.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end
            
            while( true )
            do
                local player = game:GetService("Players").LocalPlayer
                local args = {
                        [1] = "fist_combat",
                        [2] = game:GetService("Players").LocalPlayer,
                        [3] = game.Players.LocalPlayer,
                        [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
                        [5] = game.Players.LocalPlayer.Character.Humanoid,
                        [6] = 2,
                    }
                    
                    game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))
                    if game.Players.LocalPlayer.Character.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end
            
            while( true )
            do
                local player = game:GetService("Players").LocalPlayer
                local args = {
                        [1] = "fist_combat",
                        [2] = game:GetService("Players").LocalPlayer,
                        [3] = game.Players.LocalPlayer,
                        [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
                        [5] = game.Players.LocalPlayer.Character.Humanoid,
                        [6] = 3,
                    }
                    
                    game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))
                    if game.Players.LocalPlayer.Character.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end
            
            while( true )
            do
                local player = game:GetService("Players").LocalPlayer
                local args = {
                        [1] = "fist_combat",
                        [2] = game:GetService("Players").LocalPlayer,
                        [3] = game.Players.LocalPlayer,
                        [4] = game.Players.LocalPlayer.Character.HumanoidRootPart,
                        [5] = game.Players.LocalPlayer.Character.Humanoid,
                        [6] = 4,
                    }
                    
                    game:GetService("ReplicatedStorage").Remotes["To_Server"]["Handle_Initiate_S_"]:InvokeServer(unpack(args))
                    if game.Players.LocalPlayer.Character.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end
            task.wait(2.7)
            end
            end
            end
            end
end)

-- { " Fish " }
local Fish = Window:NewTab("Fish")
local FishSection = Fish:NewSection("Fish")

FishSection:NewButton("Auto-Fish-Farm", "Autofarms fish", function()
-- (You should probably check if it's in your backpack and equip it since this code only checks if it's already equipped.)
local LocalPlayer = game:GetService("Players").LocalPlayer
local Character = LocalPlayer.Character
local Fishing_Rod_Shcrip = getsenv(Character["Fishing Rod"].Fishing_Rod_Shcrip)

-- Call function to cast instead of using remote event, this is way easier.
Fishing_Rod_Shcrip.Start_Fishing()

local LocalPlayer = game:GetService("Players").LocalPlayer
local PlayerGui = LocalPlayer.PlayerGui

if PlayerGui:FindFirstChild("Fish_Minigame") then
   local Slide = PlayerGui.Fish_Minigame.Holder.Slide
   local SliderBar = Slide.SliderBar

   local Button = Slide.Button
   local Goal = SliderBar.Goal
   local Bar = SliderBar.Bar

   if math.abs(Goal.Position.X.Scale - Bar.Position.X.Scale) <= Goal.Size.X.Scale then
       -- click button
   end
end
-- (You should probably check if it's in your backpack and equip it since this code only checks if it's already equipped.)
local LocalPlayer = game:GetService("Players").LocalPlayer
local Character = LocalPlayer.Character
local Fishing_Rod_Shcrip = getsenv(Character["Fishing Rod"].Fishing_Rod_Shcrip)

-- Call the casting function
Fishing_Rod_Shcrip.Start_Fishing()
wait(1)
-- Call start fish mini game next
Fishing_Rod_Shcrip.Start_Fish_Minigame()
wait(1)
-- Call stop fishing function and put true in it so we say to the game that we did it but we actually didn't.
Fishing_Rod_Shcrip.Stop_Fishing(true)
    end)


FishSection:NewButton("90-Ouwfash", "Sells", function()
local args = {
    [1] = 0,
    [2] = 1,
    [3] = 0,
}

game:GetService("ReplicatedStorage").Remotes["Sell_Fish"]:InvokeServer(unpack(args))
end)
    
FishSection:NewButton("180-Ouwfash", "Sells", function()
local args = {
    [1] = 1,
    [2] = 0,
    [3] = 0,
}

game:GetService("ReplicatedStorage").Remotes["Sell_Fish"]:InvokeServer(unpack(args))
    end)

    FishSection:NewButton("300-Ouwfash", "Sells", function()
        local args = {
            [1] = 0,
            [2] = 0,
            [3] = 1,
        }
        
        game:GetService("ReplicatedStorage").Remotes["Sell_Fish"]:InvokeServer(unpack(args))
            end)

            FishSection:NewButton("Sell-All-Fish", "Sells", function()
                local args = {
                    [1] = 1,
                    [2] = 1,
                    [3] = 1,
                }
                
                game:GetService("ReplicatedStorage").Remotes["Sell_Fish"]:InvokeServer(unpack(args))
                    end)

-- { " Credits " }
local Credits = Window:NewTab("Credits")
local CreditsSection = Credits:NewSection("Credits")

CreditsSection:NewButton("Discord -->", "https://discord.gg/gx2uue7HcR", function()
setclipboard('https://discord.gg/vCzNfkcHJ7')
end)
